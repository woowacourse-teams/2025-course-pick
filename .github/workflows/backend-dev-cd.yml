name: Backend Dev Server CD

on:
  push:
    branches: [ backend ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: 레포지토리 불러오기
        uses: actions/checkout@v4

      - name: JDK 21 설정
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: 'gradle'

      - name: 프로젝트 gradlew 빌드
        run: ./gradlew build

      - name: 테스트 결과 보고서 작성
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: 테스트 결과
          path: backend/build/test-results/test/*.xml
          reporter: java-junit

      - name: Docker 로그인
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker 이미지 빌드
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/coursepick-backend:dev .

      - name: Docker 이미지 푸시
        run: docker push ${{ secrets.DOCKER_USERNAME }}/coursepick-backend:dev

  deploy:
    needs: build
    runs-on: self-hosted

    steps:
      - name: Docker 로그인
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: .env 파일 생성
        run: |
          cat > .env <<EOF
          DEV_PROFILE=${{ secrets.DEV_PROFILE }}
          DEV_DB_URL=${{ secrets.DEV_DB_URL }}
          DEV_DB_USERNAME=${{ secrets.DEV_DB_USERNAME }}
          DEV_DB_PASSWORD=${{ secrets.DEV_DB_PASSWORD }}
          DEV_MONGO_USERNAME=${{ secrets.DEV_MONGO_USERNAME }}
          DEV_MONGO_PASSWORD=${{ secrets.DEV_MONGO_PASSWORD }}
          EOF

      - name: 새로운 서버 시작
        run: |
          docker compose pull backend
          docker compose down
          docker compose --env-file .env up -d backend
