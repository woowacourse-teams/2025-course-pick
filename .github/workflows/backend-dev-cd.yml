name: Backend Dev Server CD

on:
  push:
    branches: [ backend ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 레포지토리 불러오기
        uses: actions/checkout@v4

      - name: JDK 21 설정
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: 'gradle'

      - name: 프로젝트 gradlew 빌드
        run: ./gradlew build

      - name: 테스트 결과 보고서 작성
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: 테스트 결과
          path: backend/build/test-results/test/*.xml
          reporter: java-junit

      - name: Docker 로그인
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker 이미지 빌드
        run: docker buildx build --platform=linux/arm64 -t ${{ secrets.DOCKER_USERNAME }}/coursepick-backend:dev .

      - name: Docker 이미지 푸시
        run: docker push ${{ secrets.DOCKER_USERNAME }}/coursepick-backend:dev

  deploy:
    needs: build
    runs-on: [ self-hosted, dev-app ]

    steps:
      - name: Docker 로그인
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: .env 파일 생성
        working-directory: /home/ssm-user/coursepick
        run: | 
          cat > .env <<'EOF'
          DEV_PROFILE=${{ secrets.DEV_PROFILE }} 
          DEV_DB_URL=${{ secrets.DEV_DB_URL }} 
          DEV_DB_USERNAME=${{ secrets.DEV_DB_USERNAME }} 
          DEV_DB_PASSWORD=${{ secrets.DEV_DB_PASSWORD }} 
          DEV_MONGO_USERNAME=${{ secrets.DEV_MONGO_USERNAME }} 
          DEV_MONGO_PASSWORD=${{ secrets.DEV_MONGO_PASSWORD }} 
          ADMIN_TOKEN=${{ secrets.DEV_ADMIN_TOKEN }} 
          GCP_DRIVE_FOLDER_ID=${{ secrets.GCP_DRIVE_FOLDER_ID }} 
          GCP_CREDENTIALS_PATH=${{ secrets.GCP_CREDENTIALS_PATH }} 
          EOF
          chmod 600 .env

      - name: 새로운 서버 시작
        working-directory: /home/ssm-user/coursepick
        run: |        
          sudo docker compose --env-file .env up -d --pull always backend
