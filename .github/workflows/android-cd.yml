name: Android CD (Deploy to PlayStore directly)

on:
  # Github Action ÌÉ≠ÏóêÏÑú ÏàòÎèôÏúºÎ°ú Ïã§Ìñâ
  workflow_dispatch:
    inputs:
      updateType:
          description: 'Î∞∞Ìè¨Ìï† ÏóÖÎç∞Ïù¥Ìä∏Ïùò Ï¢ÖÎ•òÎ•º ÏÑ†ÌÉùÌïòÏÑ∏Ïöî.'
          required: true
          default: 'ÏùºÎ∞ò ÏóÖÎç∞Ïù¥Ìä∏ (Ïï± ÎÇ¥ Ï†úÏïà X)'
          type: choice
          options:
            - 'ÏùºÎ∞ò ÏóÖÎç∞Ïù¥Ìä∏ (Ïï± ÎÇ¥ Ï†úÏïà X)'
            - 'Ïú†Ïó∞Ìïú ÏóÖÎç∞Ïù¥Ìä∏ (Ïï± ÎÇ¥ Ï†úÏïà O, Í∞ïÏ†ú X)'
            - 'Ï¶âÏãú ÏóÖÎç∞Ïù¥Ìä∏ (Ïï± ÎÇ¥ Ï†úÏïà O, Í∞ïÏ†ú O)'

jobs:
  deploy:
    runs-on: ubuntu-latest

    # JobÏóê Í∂åÌïúÏùÑ Î∂ÄÏó¨ÌïòÏó¨ Google Cloud Ïù∏Ï¶ù ÌÜ†ÌÅ∞ÏùÑ Î∞úÍ∏âÎ∞õÏùÑ Ïàò ÏûàÎèÑÎ°ù Ìï©ÎãàÎã§.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      # Ï†ÄÏû•ÏÜå ÏΩîÎìú Ï≤¥ÌÅ¨ÏïÑÏõÉ
      - name: Checkout repository
        uses: actions/checkout@v4

      # JDK 21 ÏÑ§Ï†ï
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      # Gradle Ï∫êÏãú ÏÑ§Ï†ï
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      # google-services.json ÌååÏùº ÎîîÏΩîÎî©
      - name: Decode google-services.json
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 -d > android/app/google-services.json

      # Keystore ÌååÏùº ÎîîÏΩîÎî©
      - name: Decode Keystore
        run: echo "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" | base64 -d > android/app/keystore.jks

      # local.properties ÌååÏùº ÏÉùÏÑ±
      - name: Create local.properties
        run: echo "${{ secrets.ANDROID_LOCAL_PROPERTIES_BASE64 }}" | base64 --decode > android/local.properties

      # Release AAB ÎπåÎìú
      - name: Build Release AAB
        run: cd android && ./gradlew bundleRelease
        env:
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}

      # Google Cloud Ïù∏Ï¶ù
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.PLAY_STORE_JSON_KEY }}'

      # Play Store APIÏö© Access Token Î∞úÍ∏â
      - name: Generate Access Token for Play Store API
        id: generate_token
        run: |
          # scopeÍ∞Ä Ï†ÅÏö©Îêú ÌÜ†ÌÅ∞ÏùÑ Î∞úÍ∏âÎ∞õÏïÑ, Îã§Ïùå Ïä§ÌÖùÏóêÏÑú ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎèÑÎ°ù outputÏúºÎ°ú ÏÑ§Ï†ïÌï©ÎãàÎã§.
          echo "access_token=$(gcloud auth print-access-token --scopes='https://www.googleapis.com/auth/androidpublisher')" >> $GITHUB_OUTPUT

      # Play StoreÏóê AAB ÏóÖÎ°úÎìú Î∞è Ï∂úÏãú (API ÏßÅÏ†ë Ìò∏Ï∂ú)
      - name: Upload and Release to Play Store
        run: |
          set -euo pipefail
          
          # Î≥ÄÏàò ÏÑ§Ï†ï
          UPDATE_TYPE="${{ github.event.inputs.updateType }}"
          PRIORITY_VALUE=1 # Í∏∞Î≥∏Í∞í
          if [[ "$UPDATE_TYPE" == "Ïú†Ïó∞Ìïú ÏóÖÎç∞Ïù¥Ìä∏ (Ïï± ÎÇ¥ Ï†úÏïà O, Í∞ïÏ†ú X)" ]]; then
            PRIORITY_VALUE=3
          elif [[ "$UPDATE_TYPE" == "Ï¶âÏãú ÏóÖÎç∞Ïù¥Ìä∏ (Ïï± ÎÇ¥ Ï†úÏïà O, Í∞ïÏ†ú O)" ]]; then
            PRIORITY_VALUE=5
          fi
          echo "Selected Update Type: $UPDATE_TYPE -> Priority: $PRIORITY_VALUE"
          PACKAGE_NAME="${{ secrets.ANDROID_PACKAGE_NAME }}"
          AAB_PATH="android/app/build/outputs/bundle/release/app-release.aab"
          TRACK="production"

          # Ïù∏Ï¶ùÎêú Ïï°ÏÑ∏Ïä§ ÌÜ†ÌÅ∞ Í∞ÄÏ†∏Ïò§Í∏∞ (Ï∞∏Ï°∞ Î∞©Ïãù Î≥ÄÍ≤Ω)
          ACCESS_TOKEN="${{ steps.generate_token.outputs.access_token }}"

          if [[ ! -f "$AAB_PATH" ]]; then
            echo "AAB not found at $AAB_PATH"; exit 1
          fi

          # 1. Ìé∏Ïßë ÏÑ∏ÏÖò ÏãúÏûë Î∞è editId ÌöçÎìù
          echo "1. Creating a new edit session..."
          EDIT_RESPONSE=$(curl -fSs -X POST \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            "https://androidpublisher.googleapis.com/androidpublisher/v3/applications/$PACKAGE_NAME/edits")
          EDIT_ID=$(echo $EDIT_RESPONSE | jq -r .id)
          if [[ -z "$EDIT_ID" || "$EDIT_ID" == "null" ]]; then
            echo "Failed to create edit: $EDIT_RESPONSE"; exit 1; fi
          echo "   - Success! Edit ID: $EDIT_ID"

          # 2. AAB ÏóÖÎ°úÎìú Î∞è versionCode ÌöçÎìù
          echo "2. Uploading AAB..."
          UPLOAD_RESPONSE=$(curl -fSs -X POST \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/octet-stream" \
            --data-binary "@$AAB_PATH" \
            "https://androidpublisher.googleapis.com/upload/androidpublisher/v3/applications/$PACKAGE_NAME/edits/$EDIT_ID/bundles?uploadType=media")
          VERSION_CODE=$(echo $UPLOAD_RESPONSE | jq -r .versionCode)
          if [[ -z "$VERSION_CODE" || "$VERSION_CODE" == "null" ]]; then
            echo "Failed to upload bundle: $UPLOAD_RESPONSE"; exit 1; fi
          echo "   - Success! Version Code: $VERSION_CODE"

          # 3. Ìä∏Îûô ÏóÖÎç∞Ïù¥Ìä∏ (‚≠ê inAppUpdatePriority ÏÑ§Ï†ï)
          echo "3. Assigning build to the '$TRACK' track..."
          TRACK_RESPONSE=$(curl -fSs -X PUT \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
                  "releases": [{
                    "versionCodes": ["'"$VERSION_CODE"'"],
                    "status": "completed",
                    "inAppUpdatePriority": '$PRIORITY_VALUE'
                  }]
                }' \
            "https://androidpublisher.googleapis.com/androidpublisher/v3/applications/$PACKAGE_NAME/edits/$EDIT_ID/tracks/$TRACK")
          echo "   - Success! Track updated."

          # 4. Î™®Îì† Î≥ÄÍ≤ΩÏÇ¨Ìï≠ Ï†ÅÏö©(Commit)
          echo "4. Committing all changes..."
          COMMIT_RESPONSE=$(curl -fSs -X POST \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            "https://androidpublisher.googleapis.com/androidpublisher/v3/applications/$PACKAGE_NAME/edits/$EDIT_ID:commit")
          echo "   - üéâ Deploy complete!"