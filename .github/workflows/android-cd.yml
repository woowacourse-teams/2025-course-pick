name: Android CD (Deploy to PlayStore directly)

on:
  # Github Action 탭에서 수동으로 실행
  workflow_dispatch:
    inputs:
      updatePriority:
        description: '업데이트 우선순위 (1-5). 5는 즉시 업데이트.'
        required: true
        default: '1'
        type: choice
        options:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'

jobs:
  deploy:
    runs-on: ubuntu-latest

    # Job에 권한을 부여하여 Google Cloud 인증 토큰을 발급받을 수 있도록 합니다.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      # 1. 저장소 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. JDK 21 설정
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      # 3. Gradle 캐시 설정
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      # 4. google-services.json 파일 디코딩
      - name: Decode google-services.json
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 -d > android/app/google-services.json

      # 5. Keystore 파일 디코딩
      - name: Decode Keystore
        run: echo "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" | base64 -d > android/app/keystore.jks

      # 6. Release AAB 빌드
      - name: Build Release AAB
        run: cd android && ./gradlew bundleRelease
        env:
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}

      # 7. Google Cloud 인증 (액세스 토큰 획득)
      - name: Authenticate with Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.PLAY_STORE_JSON_KEY }}'

      # 8. Play Store에 AAB 업로드 및 출시 (API 직접 호출)
      - name: Upload and Release to Play Store
        run: |
          set -e # 오류 발생 시 즉시 스크립트 중단

          # 변수 설정
          PACKAGE_NAME="${{ secrets.ANDROID_PACKAGE_NAME }}"
          AAB_PATH="android/app/build/outputs/bundle/release/app-release.aab"
          TRACK="internal" # 배포할 트랙: internal, alpha, beta, production
          
          # 인증된 액세스 토큰 가져오기
          ACCESS_TOKEN="${{ steps.auth.outputs.access_token }}"
          
          # 1. 편집 세션 시작 및 editId 획득
          echo "1. Creating a new edit session..."
          EDIT_RESPONSE=$(curl -s -X POST \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            "https://androidpublisher.googleapis.com/androidpublisher/v3/applications/$PACKAGE_NAME/edits")
          EDIT_ID=$(echo $EDIT_RESPONSE | jq -r .id)
          echo "   - Success! Edit ID: $EDIT_ID"
          
          # 2. AAB 업로드 및 versionCode 획득
          echo "2. Uploading AAB..."
          UPLOAD_RESPONSE=$(curl -s -X POST \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/octet-stream" \
            --data-binary "@$AAB_PATH" \
            "https://androidpublisher.googleapis.com/androidpublisher/v3/applications/$PACKAGE_NAME/edits/$EDIT_ID/bundles")
          VERSION_CODE=$(echo $UPLOAD_RESPONSE | jq -r .versionCode)
          echo "   - Success! Version Code: $VERSION_CODE"
          
          # 3. 트랙 업데이트 (⭐ inAppUpdatePriority 설정)
          echo "3. Assigning build to the '$TRACK' track with high priority..."
          curl -s -X PUT \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
                  "releases": [{
                    "versionCodes": ["'"$VERSION_CODE"'"],
                    "status": "draft",
                    "inAppUpdatePriority": ${{ github.event.inputs.updatePriority }}
                  }]
                }' \
            "https://androidpublisher.googleapis.com/androidpublisher/v3/applications/$PACKAGE_NAME/edits/$EDIT_ID/tracks/$TRACK"
          echo "   - Success!"
          
          # 4. 모든 변경사항 적용(Commit)
          echo "4. Committing all changes..."
          curl -s -X POST \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            "https://androidpublisher.googleapis.com/androidpublisher/v3/applications/$PACKAGE_NAME/edits/$EDIT_ID:commit"
          echo "   - 🎉 Deploy complete!"