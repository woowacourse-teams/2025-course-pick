name: Backend Image Push

on:
  push:
    branches: [ backend ]

jobs:
  deploy:
    runs-on: self-hosted # runner를 self-hosted로 지정합니다.

    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('backend/**/*.gradle*', 'backend/**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run tests
        run: ./gradlew test

      - name: Run code quality checks
        run: ./gradlew check

      - name: Generate test report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Gradle Tests
          path: backend/build/test-results/test/*.xml
          reporter: java-junit

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run Spring Boot Application
        run: |
          JAR_PATH=$(find build/libs -name "*.jar" | head -n 1)
          JAR_NAME=$(basename $JAR_PATH)
          echo "### Found JAR file: $JAR_PATH ###"
          PID=$(pgrep -f "$JAR_NAME")
          if [ -n "$PID" ]; then
            echo "### Stopping existing process (PID: $PID) ###"
            kill -15 $PID
            sleep 5 # 종료 대기
          fi
          echo "### Starting new application... ###"
          nohup java -jar $JAR_PATH > application.log 2>&1 &