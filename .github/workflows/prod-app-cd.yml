name: Prod App CD
on:
  workflow_call:
    inputs:
      run_id:
        required: true
        type: string
      main_runner:
        required: true
        type: string
      sub_runner:
        required: true
        type: string

jobs:
  deploy-prod-main:
    name: main runner에 서버 배포
    runs-on: [ self-hosted, "${{ inputs.main_runner }}" ]
    defaults:
      run:
        working-directory: /home/ssm-user/coursepick
    steps:
      - name: Docker 로그인
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: .env 파일 생성
        working-directory: /home/ssm-user/coursepick
        run: |
          cat > .env <<'EOF'
          ${{ secrets.PROD_ENV_FILE }}
          EOF
          chmod 600 .env

      - name: 새로운 서버 시작
        working-directory: /home/ssm-user/coursepick
        run: |
          sudo docker compose --env-file .env up -d --pull always backend

      - name: 시작된 서버 헬스체크
        run: |
          for i in $(seq 1 10)
          do
            SERVER_STATUS=$(curl -o /dev/null -w "%{http_code}" http://localhost:80/actuator/health || true)

            if [ "$SERVER_STATUS" -eq 200 ]; then
              echo "서버 정상적으로 실행됨 status=$SERVER_STATUS"
              break
            else
              echo "헬스체크에 실패함. 5초 후 다시 시도"
              sleep 5
            fi

            if [ $i -eq 10 ]; then
              echo "서버가 정상적으로 실행되지 않아 종료함"
              exit 1
            fi
          done

  update-nginx-to-prod-main:
    name: nginx 로드밸런서 설정 파일 main runner 설정으로 변경
    needs: [ deploy-prod-main ]
    if: ${{ needs.deploy-prod-main.result == 'success' }}
    runs-on: [ self-hosted, prod-lb ]
    steps:
      - name: upstream 갱신, 리로드
        run: |
          sudo ln -sfn /etc/nginx/snippets/upstream.${{ inputs.main_runner }} /etc/nginx/snippets/upstream.active
          sudo nginx -t && sudo systemctl reload nginx

  shutdown-prod-sub:
    name: sub runner 서버 종료
    needs: [ update-nginx-to-prod-main ]
    runs-on: [ self-hosted, "${{ inputs.sub_runner }}" ]
    defaults:
      run:
        working-directory: /home/ssm-user/coursepick
    steps:
      - name: 기존 서버 내리기
        working-directory: /home/ssm-user/coursepick
        run: |
          docker compose down
          docker image prune -a -f
