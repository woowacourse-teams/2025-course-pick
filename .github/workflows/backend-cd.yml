name: Backend CD

on:
  pull_request:
    branches: [ backend ]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: 레포지토리 불러오기
        uses: actions/checkout@v4

      - name: JDK 21 설정
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: 'gradle'

      - name: 프로젝트 gradlew 빌드
        run: ./gradlew build

      - name: 테스트 결과 보고서 작성
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: 테스트 결과
          path: backend/build/test-results/test/*.xml
          reporter: java-junit

      - name: 임시 아티팩트 저장소 업로드
        uses: actions/upload-artifact@v4
        with:
          name: coursepick
          path: ./build/libs/*SNAPSHOT.jar

  deploy:
    needs: build
    runs-on: self-hosted

    steps:
      - name: 임시 아티팩트 저장소에 저장된 파일 다운로드
        uses: actions/download-artifact@v4
        with:
          name: coursepick
          path: ./artifacts

      - name: 기존 80 포트 서버 내리기
        run: |
          PID=$(sudo lsof -t -i :80)

          if [ -n "$PID" ]; then
          	echo "사용중인 포트 80 서버 종료... PID=$PID"
          	sudo kill -15 $PID
          	sleep 5

          	CHECK_PID=$(sudo lsof -t -i :80)
          	if [ -z "$CHECK_PID" ]; then
          		echo "기존 서버 종료됨"
          	else
          		echo "기존 서버 종료되지 않아 강제 종료 수행... PID=$CHECK_PID"
          		sudo kill -9 $CHECK_PID
          		sleep 5
          	fi
          else
          	echo "포트 80은 사용 중이지 않음"
          fi

      - name: 새로운 서버로 실행
        env:
          SPRING_PROFILES_ACTIVE: ${{ secrets.DEV_PROFILE }}
          SERVER_PORT: 80
          SPRING_DATASOURCE_URL: ${{ secrets.DEV_DB_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.DEV_DB_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.DEV_DB_PASSWORD }}
          ADMIN_TOKEN: ${{ secrets.DEV_ADMIN_TOKEN }}
        run: |
          JAR_FILE=$(find ./artifacts -name "*.jar" | head -n 1)
          echo "서버 시작 중... =$JAR_FILE"

          sudo -E -b sh -c "java -jar '$JAR_FILE' > /var/log/app.log 2>&1"
          
          sleep 5        
          SERVER_STATUS=$(curl -o /dev/null -w "%{http_code}" http://localhost:80/actuator/health || true)
          if [ "$SERVER_STATUS" -eq 200 ]; then
          	echo "서버 정상적으로 실행됨 status=$SERVER_STATUS"
          else
          	echo "헬스체크에 실패함"
          	exit 1;
          fi
