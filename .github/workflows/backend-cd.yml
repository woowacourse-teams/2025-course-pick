name: Backend CD

on:
  pull_request:
    branches: [ backend ]
  push:
    branches: [ backend ]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: 레포지토리 불러오기
        uses: actions/checkout@v4

      - name: JDK 21 설정
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Gradle 패키지 캐시
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('backend/**/*.gradle*', 'backend/**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 테스트 실행
        run: ./gradlew test

      - name: 테스트 리포트 생성
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Gradle Tests
          path: backend/build/test-results/test/*.xml
          reporter: java-junit

      - name: 테스트 및 빌드하기
        run: ./gradlew clean build

      - name: GitHub Actions의 임시 아티팩트 저장소에 jar 파일 업로드
        uses: actions/upload-artifact@v4
        with:
          name: project
          path: backend/build/libs/*SNAPSHOT.jar

  deploy:
    needs: build
    runs-on: self-hosted

    steps:
      - name: GitHub Actions의 임시 아티팩트 저장소에 jar 파일 다운로드
        uses: actions/download-artifact@v4
        with:
          name: project
          path: ./artifacts

      - name: 80 포트 서버 내리기
        run: |
          sudo lsof -t -i :80 | sudo xargs -r kill -9
          sleep 5

      - name: 서버 다시 올리기
        run: |
          JAR_FILE=$(find ./artifacts -name "*.jar" | head -n 1)
          echo "Starting server with $JAR_FILE"
          RUNNER_TRACKING_ID=""
          nohup sudo java -Dspring.profiles.active="${{ secrets.DEV_PROFILE }}" -jar "$JAR_FILE" \
          --server.port=80 \
          --DB_URL="${{ secrets.DEV_DB_URL }}" \
          --DB_USERNAME="${{ secrets.DEV_DB_USERNAME }}" \
          --DB_PASSWORD="${{ secrets.DEV_DB_PASSWORD }}" \
          --ADMIN_TOKEN="${{ secrets.DEV_ADMIN_TOKEN }}"
          > app.log 2>&1 & disown; exit 0
